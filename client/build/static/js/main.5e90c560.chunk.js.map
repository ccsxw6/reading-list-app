{"version":3,"sources":["components/DeleteBtn/index.js","components/Jumbotron/index.js","utils/API.js","components/Grid/index.js","components/List/index.js","components/Form/index.js","pages/Books.js","pages/Detail.js","pages/NoMatch.js","components/Nav/index.js","App.js","index.js"],"names":["DeleteBtn","props","className","role","tabIndex","Jumbotron","children","style","height","clear","paddingTop","textAlign","axios","get","id","delete","bookData","post","Container","fluid","Row","Col","size","split","map","join","List","ListItem","Input","TextArea","rows","FormBtn","float","marginBottom","Books","useState","books","setBooks","formObject","setFormObject","loadBooks","API","then","res","data","catch","err","console","log","handleInputChange","event","target","name","value","useEffect","onChange","placeholder","disabled","author","title","onClick","preventDefault","synopsis","length","book","key","_id","to","Detail","setBook","useParams","NoMatch","aria-label","Nav","href","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e90c560.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// The ...props means, spread all of the passed props onto this element\n// That way we don't have to define them all individually\nfunction DeleteBtn(props) {\n  return (\n    <span className=\"delete-btn\" {...props} role=\"button\" tabIndex=\"0\">\n      ✗\n    </span>\n  );\n}\n\nexport default DeleteBtn;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 300, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n      className=\"jumbotron\"\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n                        // do all post methods require two parameters? \n    return axios.post(\"/api/books\", bookData);\n  }\n};\n","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n  return (\n    <div\n      className={size\n        .split(\" \")\n        .map(size => \"col-\" + size)\n        .join(\" \")}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n// List takes in a children object - is Children our books state? \nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\n\n// This file exports the Input, TextArea, and FormBtn components\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\nexport function TextArea(props) {\n  return (\n    <div className=\"form-group\">\n      <textarea className=\"form-control\" rows=\"20\" {...props} />\n    </div>\n  );\n}\n\nexport function FormBtn(props) {\n  return (\n    <button {...props} style={{ float: \"right\", marginBottom: 10 }} className=\"btn btn-success\">\n      {props.children}\n    </button>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport DeleteBtn from \"../components/DeleteBtn\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\n\nfunction Books() {\n  // Setting our component's initial state\n  // two states, one is called books and the other is called formObject\n  const [books, setBooks] = useState([])\n  const [formObject, setFormObject] = useState({})\n\n  // Load all books and store them with setBooks\n  // when page loads, call loadBooks\n  useEffect(() => {\n    loadBooks()\n  }, [])\n\n  // Loads all books and sets them to books\n  // api comes from util/API.js\n  function loadBooks() {\n    // getBooks returns a get request from /api/books - This route is defined in routes/api/books.js - it finds all the books\n    // api/books \n    API.getBooks()\n      .then(res => \n        // sets the state to data from the response\n        setBooks(res.data)\n      )\n      .catch(err => console.log(err));\n  };\n\n\n\n  // Deletes a book from the database with a given id, then reloads books from the db\n  function deleteBook(id) {\n    // deleteBook maks a delete request to api/books/:id, this route is defined in routes/api/books.js\n    // it takes matches the id to a book in the db and removes it\n    API.deleteBook(id)\n    // reloads all of the books and updates the state\n      .then(res => loadBooks())\n      .catch(err => console.log(err));\n  }\n\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    // grabs the name and the value from the event\n    // example - name will be title, author or synopsis - name is already assigned for each input\n    // the value is what the user is typing \n    const { name, value } = event.target;\n    // sets the state for the form object by taking whatever name comes from the target and sets it to the value that's typed into the input field\n    setFormObject({...formObject, [name]: value})\n  };\n\n  // When the form is submitted, use the API.saveBook method to save the book data\n  // Then reload books from the database\n  function handleFormSubmit(event) {\n    event.preventDefault();\n    // if the formObject has a title and an author..\n    if (formObject.title && formObject.author) {\n      // call this method which does a post request to api/books\n      // save book takes the book data passed in below\n      // and posts it to that route\n      API.saveBook({\n        title: formObject.title,\n        author: formObject.author,\n        synopsis: formObject.synopsis\n      })\n        .then(res => loadBooks())\n        .catch(err => console.log(err));\n    }\n  };\n\n    return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-6\">\n            <Jumbotron>\n              <h1>What Books Should I Read?</h1>\n            </Jumbotron>\n            <form>\n              <Input\n              // passing in this info as props to the Input component. All it does is adds this information into the input element\n              // when there's a change to this input field, call handleInputChange, which grabs the name and the value. Here, the name will be \"title\" when they type in this input field. \n                onChange={handleInputChange}\n                // this will get changed to whatever the user is typing in \n                name=\"title\"\n                placeholder=\"Title (required)\"\n              />\n              <Input\n                onChange={handleInputChange}\n                name=\"author\"\n                placeholder=\"Author (required)\"\n              />\n              <TextArea\n              // same as input\n                onChange={handleInputChange}\n                name=\"synopsis\"\n                placeholder=\"Synopsis (Optional)\"\n              />\n              <FormBtn\n              // same as input \n                disabled={!(formObject.author && formObject.title)}\n                onClick={handleFormSubmit}\n              >\n                Submit Book\n              </FormBtn>\n            </form>\n          </Col>\n\n\n          <Col size=\"md-6 sm-12\">\n            <Jumbotron>\n              <h1>Books On My List</h1>\n            </Jumbotron>\n            {/* if there is a books.length then render the List component, else render the <h3> No results to Display</h3> element */}\n            {books.length ? (\n              <List>\n                {/* map through the books state */}\n                {books.map(book => (\n                  // give the li element a unique key\n                  // how mongo returns their id\n                  <ListItem key={book._id}>\n                    {/* give it a Link to /books/ + book._id */}\n                    {/* when they click on that link, it takes user to api/books/book._id\n                    Is this just a get request?*/}\n                    <Link to={\"/books/\" + book._id}>\n                      <strong>\n                        {book.title} by {book.author}\n                      </strong>\n                    </Link>\n                    <DeleteBtn onClick={() => deleteBook(book._id)} />\n                  </ListItem>\n                ))}\n              </List>\n            ) : (\n              <h3>No Results to Display</h3>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default Books;\n\n\n// liftOff with Launchcode - use a different stack than what we learned\n// connected with mercy with launchcode - connecting iwth companies in st louis\n// learn typescript","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\n\n// This page gets rendered when /books/:id is hit\n// this is the page that gets rendered when they click on one of the already made books\n\n\nfunction Detail(props) {\n  // creating book state\n  const [book, setBook] = useState({})\n\n  // When this component mounts, grab the book with the _id of props.match.params.id\n  // e.g. localhost:3000/books/599dcb67f0f16317844583fc\n  // useParams is a hook!\n  // this id will contain title and author?\n  const {id} = useParams()\n\n  // \n  useEffect(() => {\n    // getBook gets a book from the database based on the id \n    // this id is the same as the const {id} = useParams()\n    API.getBook(id)\n      .then(res => setBook(res.data))\n      .catch(err => console.log(err));\n  }, [])\n\n  return (\n      <Container fluid>\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron>\n              <h1>\n                {book.title} by {book.author}\n              </h1>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-10 md-offset-1\">\n            <article>\n              <h1>Synopsis</h1>\n              <p>\n                {book.synopsis}\n              </p>\n            </article>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-2\">\n            <Link to=\"/\">← Back to Authors</Link>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n\n\nexport default Detail;\n","import React from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nfunction NoMatch() {\n  return (\n    <Container fluid>\n      <Row>\n        <Col size=\"md-12\">\n          <Jumbotron>\n            <h1>404 Page Not Found</h1>\n            <h1>\n              <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n                🙄\n              </span>\n            </h1>\n          </Jumbotron>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default NoMatch;\n","import React from \"react\";\n\nfunction Nav() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n      <a className=\"navbar-brand\" href=\"/\">\n        React Reading List\n      </a>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Books from \"./pages/Books\";\nimport Detail from \"./pages/Detail\";\nimport NoMatch from \"./pages/NoMatch\";\nimport Nav from \"./components/Nav\";\nimport \"./app.css\"\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Nav />\n        {/* use a switch so that the routes are rendered exclusively. Ex: if \"/\", or /books is hit, <Detail> won't get rendered too, just the components associated with the url that's hit */}\n        <Switch>\n          <Route exact path={[\"/\", \"/books\"]}>\n            <Books />\n          </Route>\n          <Route exact path=\"/books/:id\">\n            <Detail />\n          </Route>\n          <Route>\n            <NoMatch />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}